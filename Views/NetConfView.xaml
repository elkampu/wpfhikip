<Window x:Class="wpfhikip.Views.NetConfView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:wpfhikip.Views"
        xmlns:controls="clr-namespace:wpfhikip.Controls"
        xmlns:viewModel="clr-namespace:wpfhikip.ViewModels"
        xmlns:converters="clr-namespace:wpfhikip.Converters"
        mc:Ignorable="d"
        Title="Network Configuration Manager"
        Height="600"
        Width="1100">
    <Window.DataContext>
        <viewModel:NetConfViewModel />
    </Window.DataContext>
    <Window.Resources>
        <!-- Add the converters -->
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
        <converters:EnumToStringConverter x:Key="EnumToStringConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <!-- Modern Button Style with bigger size -->
        <Style x:Key="ModernButtonStyle"
               TargetType="Button">
            <Setter Property="Background"
                    Value="{StaticResource SEC_MidBlue}" />
            <Setter Property="Foreground"
                    Value="{StaticResource SEC_White}" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="FontWeight"
                    Value="Medium" />
            <Setter Property="FontSize"
                    Value="14" />
            <Setter Property="Cursor"
                    Value="Hand" />
            <Setter Property="Margin"
                    Value="5" />
            <Setter Property="Padding"
                    Value="8,4" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="6"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="{TemplateBinding Padding}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="{StaticResource SEC_LightBlue}" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="{StaticResource SEC_NavyBlue}" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter Property="Background"
                                        Value="{StaticResource SEC_LightGrey}" />
                                <Setter Property="Foreground"
                                        Value="{StaticResource SEC_MidGrey}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Cancel Button Style (red theme) -->
        <Style x:Key="CancelButtonStyle"
               TargetType="Button"
               BasedOn="{StaticResource ModernButtonStyle}">
            <Setter Property="Background"
                    Value="{StaticResource SEC_InfoRed}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="{StaticResource SEC_MidRed}" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter Property="Background"
                            Value="{StaticResource SEC_DarkRed}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Status Button Style for DataGrid cells -->
        <Style x:Key="StatusButtonStyle"
               TargetType="Button">
            <Setter Property="Background"
                    Value="{Binding CellColor}" />
            <Setter Property="Foreground"
                    Value="Black" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="BorderBrush"
                    Value="{StaticResource SEC_MidGrey}" />
            <Setter Property="FontWeight"
                    Value="Medium" />
            <Setter Property="FontSize"
                    Value="10" />
            <Setter Property="Cursor"
                    Value="Hand" />
            <Setter Property="Margin"
                    Value="2" />
            <Setter Property="Padding"
                    Value="4,2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="{TemplateBinding Padding}"
                                              TextElement.Foreground="{TemplateBinding Foreground}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Specific triggers for different background colors to ensure readability -->
                            <DataTrigger Binding="{Binding CellColor}"
                                         Value="{x:Static Brushes.LightYellow}">
                                <Setter Property="Foreground"
                                        Value="Black" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CellColor}"
                                         Value="{x:Static Brushes.LightGreen}">
                                <Setter Property="Foreground"
                                        Value="Black" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CellColor}"
                                         Value="{x:Static Brushes.Orange}">
                                <Setter Property="Foreground"
                                        Value="Black" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CellColor}"
                                         Value="{x:Static Brushes.LightCoral}">
                                <Setter Property="Foreground"
                                        Value="Black" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CellColor}"
                                         Value="{x:Static Brushes.LightGray}">
                                <Setter Property="Foreground"
                                        Value="Black" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CellColor}"
                                         Value="{x:Static Brushes.Red}">
                                <Setter Property="Foreground"
                                        Value="White" />
                            </DataTrigger>

                            <!-- Hover effects -->
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="BorderBrush"
                                        Value="{StaticResource SEC_DarkGrey}" />
                                <Setter Property="BorderThickness"
                                        Value="2" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter Property="BorderBrush"
                                        Value="{StaticResource SEC_DarkGrey}" />
                                <Setter Property="BorderThickness"
                                        Value="2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0">
            <ScrollViewer VerticalScrollBarVisibility="Visible"
                          HorizontalScrollBarVisibility="Auto">
                <DataGrid x:Name="dataGrid"
                          AutoGenerateColumns="False"
                          CanUserSortColumns="False"
                          CanUserAddRows="False"
                          CanUserResizeColumns="False"
                          CanUserReorderColumns="False"
                          SelectionUnit="Cell"
                          ClipboardCopyMode="ExcludeHeader"
                          Height="400"
                          RowHeight="32"
                          ItemsSource="{Binding Cameras, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          PreviewKeyDown="DataGrid_PreviewKeyDown"
                          BeginningEdit="DataGrid_BeginningEdit">
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="Background"
                                    Value="{Binding RowColor}" />
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Columns>
                        <!-- Select Column -->
                        <DataGridTemplateColumn Header="☑"
                                                Width="35"
                                                MinWidth="35"
                                                MaxWidth="35">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!-- Protocol Column - Fixed to properly handle enum binding -->
                        <DataGridTemplateColumn Header="Protocol"
                                                Width="80"
                                                MinWidth="80"
                                                MaxWidth="80">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Protocol, Converter={StaticResource EnumToStringConverter}}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontSize="12" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox SelectedValue="{Binding Protocol, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              ItemsSource="{Binding Path=DataContext.ProtocolOptions, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                              FontSize="12"
                                              HorizontalContentAlignment="Center">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnumToStringConverter}}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!-- Current IP with custom IP control -->
                        <DataGridTemplateColumn Header="Current IP"
                                                Width="110"
                                                MinWidth="110"
                                                MaxWidth="110">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding CurrentIP}"
                                               FontWeight="{Binding CellFontWeight}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontSize="12" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <controls:IpAddressControl IpAddress="{Binding CurrentIP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!-- Custom Port Column - Moved right after Current IP -->
                        <DataGridTextColumn Header="Port"
                                            Width="50"
                                            MinWidth="50"
                                            MaxWidth="50"
                                            Binding="{Binding Port}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment"
                                            Value="Center" />
                                    <Setter Property="VerticalAlignment"
                                            Value="Center" />
                                    <Setter Property="FontSize"
                                            Value="12" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox">
                                    <Setter Property="HorizontalContentAlignment"
                                            Value="Center" />
                                    <Setter Property="VerticalContentAlignment"
                                            Value="Center" />
                                    <Setter Property="FontSize"
                                            Value="12" />
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>

                        <!-- New IP with custom IP control -->
                        <DataGridTemplateColumn Header="New IP"
                                                Width="110"
                                                MinWidth="110"
                                                MaxWidth="110">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding NewIP}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontSize="12" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <controls:IpAddressControl IpAddress="{Binding NewIP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!-- New Mask with custom IP control -->
                        <DataGridTemplateColumn Header="Mask"
                                                Width="110"
                                                MinWidth="110"
                                                MaxWidth="110">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding NewMask}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontSize="12" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <controls:IpAddressControl IpAddress="{Binding NewMask, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!-- New Gateway with custom IP control -->
                        <DataGridTemplateColumn Header="Gateway"
                                                Width="110"
                                                MinWidth="110"
                                                MaxWidth="110">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding NewGateway}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontSize="12" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <controls:IpAddressControl IpAddress="{Binding NewGateway, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!-- New NTP Server with custom IP control -->
                        <DataGridTemplateColumn Header="NTP"
                                                Width="110"
                                                MinWidth="110"
                                                MaxWidth="110">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding NewNTPServer}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontSize="12" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <controls:IpAddressControl IpAddress="{Binding NewNTPServer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!-- User Column -->
                        <DataGridTextColumn Header="User"
                                            Width="60"
                                            MinWidth="60"
                                            MaxWidth="60"
                                            Binding="{Binding Username}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment"
                                            Value="Center" />
                                    <Setter Property="VerticalAlignment"
                                            Value="Center" />
                                    <Setter Property="FontSize"
                                            Value="12" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <!-- Password Column -->
                        <DataGridTextColumn Header="Pass"
                                            Width="60"
                                            MinWidth="60"
                                            MaxWidth="60"
                                            Binding="{Binding Password}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment"
                                            Value="Center" />
                                    <Setter Property="VerticalAlignment"
                                            Value="Center" />
                                    <Setter Property="FontSize"
                                            Value="12" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTemplateColumn Header="Net"
                                                Width="70"
                                                MinWidth="70"
                                                MaxWidth="70"
                                                IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Content="Info"
                                            Click="CameraInfoButton_Click"
                                            Tag="{Binding}"
                                            ToolTip="Click to view camera information"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            IsEnabled="{Binding CanShowCameraInfo}">
                                        <Button.Style>
                                            <Style TargetType="Button"
                                                   BasedOn="{StaticResource StatusButtonStyle}">
                                                <Style.Triggers>
                                                    <!-- Disabled state -->
                                                    <Trigger Property="IsEnabled"
                                                             Value="False">
                                                        <Setter Property="Background"
                                                                Value="{StaticResource SEC_LightGrey}" />
                                                        <Setter Property="Foreground"
                                                                Value="{StaticResource SEC_MidGrey}" />
                                                        <Setter Property="BorderBrush"
                                                                Value="{StaticResource SEC_MidGrey}" />
                                                    </Trigger>
                                                    <!-- Enabled state with green color when camera info can be shown -->
                                                    <DataTrigger Binding="{Binding CanShowCameraInfo}"
                                                                 Value="True">
                                                        <Setter Property="Background"
                                                                Value="#FF4CAF50" />
                                                        <Setter Property="Foreground"
                                                                Value="White" />
                                                        <Setter Property="BorderBrush"
                                                                Value="#FF45A049" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!-- Status Column with button-like appearance -->
                        <DataGridTemplateColumn Header="Status"
                                                Width="90"
                                                MinWidth="90"
                                                MaxWidth="90"
                                                IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Content="{Binding ShortStatus}"
                                            Style="{StaticResource StatusButtonStyle}"
                                            Click="StatusButton_Click"
                                            Tag="{Binding}"
                                            ToolTip="Click to see detailed status logs"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </ScrollViewer>
        </StackPanel>

        <!-- Improved button layout with better spacing and grouping -->
        <Grid Grid.Row="1"
              Margin="10,15,10,15">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!-- Left group: Data management buttons -->
            <StackPanel Grid.Column="0"
                        Orientation="Horizontal"
                        HorizontalAlignment="Left">
                <Button x:Name="addButton"
                        Content="Add Camera"
                        Command="{Binding AddCameraCommand}"
                        Width="100"
                        Height="36"
                        Style="{StaticResource ModernButtonStyle}" />

                <Button x:Name="deleteButton"
                        Content="Delete"
                        Command="{Binding DeleteSelectedCommand}"
                        Width="80"
                        Height="36"
                        Style="{StaticResource ModernButtonStyle}" />

                <Button x:Name="selectAllButton"
                        Content="Select All"
                        Command="{Binding SelectAllCommand}"
                        Width="90"
                        Height="36"
                        Style="{StaticResource ModernButtonStyle}" />
            </StackPanel>

            <!-- Center group: Operation buttons -->
            <StackPanel Grid.Column="1"
                        Orientation="Horizontal"
                        HorizontalAlignment="Center">
                <Button x:Name="checkCompatibilityButton"
                        Content="Check Compatibility"
                        Command="{Binding CheckCompatibilityCommand}"
                        Width="150"
                        Height="36"
                        Visibility="{Binding IsCheckingCompatibility, Converter={StaticResource InverseBooleanToVisibilityConverter}, ConverterParameter=Invert}"
                        Style="{StaticResource ModernButtonStyle}" />

                <Button x:Name="cancelCompatibilityButton"
                        Content="Cancel Check"
                        Command="{Binding CancelCompatibilityCommand}"
                        Width="150"
                        Height="36"
                        Visibility="{Binding IsCheckingCompatibility, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Style="{StaticResource CancelButtonStyle}" />

                <Button x:Name="sendNetworkButton"
                        Content="Send Network"
                        Command="{Binding SendNetworkConfigCommand}"
                        Width="120"
                        Height="36"
                        Style="{StaticResource ModernButtonStyle}" />

                <Button x:Name="sendNTPButton"
                        Content="Send NTP"
                        Command="{Binding SendNTPConfigCommand}"
                        Width="100"
                        Height="36"
                        Style="{StaticResource ModernButtonStyle}" />
            </StackPanel>

            <!-- Right group: File operations -->
            <StackPanel Grid.Column="2"
                        Orientation="Horizontal"
                        HorizontalAlignment="Right">
                <Button x:Name="saveButton"
                        Content="Save Config"
                        Command="{Binding SaveConfigCommand}"
                        Width="100"
                        Height="36"
                        Style="{StaticResource ModernButtonStyle}" />

                <Button x:Name="loadButton"
                        Content="Load Config"
                        Command="{Binding LoadConfigCommand}"
                        Width="100"
                        Height="36"
                        Style="{StaticResource ModernButtonStyle}" />
            </StackPanel>
        </Grid>
    </Grid>
</Window>
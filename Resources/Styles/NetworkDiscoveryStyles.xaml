<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:wpfhikip.Converters">

    <!-- Converters -->
    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <converters:BoolToStatusConverter x:Key="BoolToStatusConverter" />
    <converters:InverseBooleanToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />

    <!-- Modern Card Style -->
    <Style x:Key="ModernCardStyle"
           TargetType="Border">
        <Setter Property="Background"
                Value="{StaticResource SEC_White}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource SEC_LightGrey}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="CornerRadius"
                Value="8" />
        <Setter Property="Padding"
                Value="16" />
        <Setter Property="Margin"
                Value="8" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="8"
                                  ShadowDepth="2"
                                  Opacity="0.1" />
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Modern Button Base Style -->
    <Style x:Key="ModernButtonStyle"
           TargetType="Button">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Padding"
                Value="12,8" />
        <Setter Property="Margin"
                Value="4" />
        <Setter Property="FontWeight"
                Value="Medium" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="4"
                                  ShadowDepth="1"
                                  Opacity="0.2" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Opacity"
                        Value="0.9" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="0.98"
                                        ScaleY="0.98" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Primary Button Style -->
    <Style x:Key="PrimaryButtonStyle"
           TargetType="Button"
           BasedOn="{StaticResource ModernButtonStyle}">
        <Setter Property="Background"
                Value="#2563eb" />
        <Setter Property="Foreground"
                Value="White" />
    </Style>

    <!-- Success Button Style -->
    <Style x:Key="SuccessButtonStyle"
           TargetType="Button"
           BasedOn="{StaticResource ModernButtonStyle}">
        <Setter Property="Background"
                Value="#16a34a" />
        <Setter Property="Foreground"
                Value="White" />
    </Style>

    <!-- Danger Button Style -->
    <Style x:Key="DangerButtonStyle"
           TargetType="Button"
           BasedOn="{StaticResource ModernButtonStyle}">
        <Setter Property="Background"
                Value="#dc2626" />
        <Setter Property="Foreground"
                Value="White" />
    </Style>

    <!-- Secondary Button Style -->
    <Style x:Key="SecondaryButtonStyle"
           TargetType="Button"
           BasedOn="{StaticResource ModernButtonStyle}">
        <Setter Property="Background"
                Value="#6b7280" />
        <Setter Property="Foreground"
                Value="White" />
    </Style>

    <!-- Mode Radio Button Style -->
    <Style x:Key="ModeRadioButtonStyle"
           TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="6"
                            Padding="12,8"
                            Cursor="Hand">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#f3f4f6" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="#9ca3af" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#dbeafe" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="#2563eb" />
                            <Setter Property="Foreground"
                                    Value="#1e40af" />
                            <Setter Property="FontWeight"
                                    Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="False">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource SEC_White}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource SEC_LightGrey}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource SEC_DarkGrey}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#f9fafb" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="#e5e7eb" />
                            <Setter Property="Foreground"
                                    Value="#9ca3af" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize"
                Value="12" />
        <Setter Property="FontWeight"
                Value="Medium" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="12,8" />
        <Setter Property="Margin"
                Value="2" />
    </Style>

    <!-- Section Title Style -->
    <Style x:Key="SectionTitleStyle"
           TargetType="TextBlock">
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="16" />
        <Setter Property="Foreground"
                Value="{StaticResource SEC_DarkGrey}" />
        <Setter Property="Margin"
                Value="0,0,0,12" />
    </Style>

    <!-- Statistics Card Style -->
    <Style x:Key="StatsCardStyle"
           TargetType="Border">
        <Setter Property="Background"
                Value="{StaticResource SEC_White}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource SEC_LightGrey}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="CornerRadius"
                Value="6" />
        <Setter Property="Padding"
                Value="16" />
        <Setter Property="Margin"
                Value="4" />
    </Style>

    <!-- Modern DataGrid Style -->
    <Style x:Key="ModernDataGridStyle"
           TargetType="DataGrid">
        <Setter Property="Background"
                Value="{StaticResource SEC_White}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource SEC_LightGrey}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="GridLinesVisibility"
                Value="Horizontal" />
        <Setter Property="HorizontalGridLinesBrush"
                Value="#f3f4f6" />
        <Setter Property="HeadersVisibility"
                Value="Column" />
        <Setter Property="AutoGenerateColumns"
                Value="False" />
        <Setter Property="CanUserAddRows"
                Value="False" />
        <Setter Property="CanUserDeleteRows"
                Value="False" />
        <Setter Property="IsReadOnly"
                Value="True" />
        <Setter Property="AlternatingRowBackground"
                Value="#f9fafb" />
        <Setter Property="RowHeight"
                Value="32" />
    </Style>

    <!-- Mode Description TextBlock Style -->
    <Style x:Key="ModeDescriptionTextBlockStyle"
           TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsDefaultMode}"
                         Value="True">
                <Setter Property="Text"
                        Value="Default mode automatically selects optimal discovery methods and all available network segments." />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsCustomMode}"
                         Value="True">
                <Setter Property="Text"
                        Value="Custom mode allows you to manually select specific discovery methods and network segments." />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Hover Border Style -->
    <Style x:Key="HoverBorderStyle"
           TargetType="Border">
        <Setter Property="Background"
                Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="#f3f4f6" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Discovery Methods CheckBox Style -->
    <Style x:Key="DiscoveryMethodsCheckBoxStyle"
           TargetType="CheckBox"
           BasedOn="{StaticResource {x:Type CheckBox}}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.IsDefaultMode, RelativeSource={RelativeSource AncestorType=Window}}"
                         Value="True">
                <Setter Property="IsEnabled"
                        Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Network Segments CheckBox Style -->
    <Style x:Key="NetworkSegmentsCheckBoxStyle"
           TargetType="CheckBox"
           BasedOn="{StaticResource {x:Type CheckBox}}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.IsDefaultMode, RelativeSource={RelativeSource AncestorType=Window}}"
                         Value="True">
                <Setter Property="IsEnabled"
                        Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Auto Label Border Style -->
    <Style x:Key="AutoLabelBorderStyle"
           TargetType="Border">
        <Setter Property="Visibility"
                Value="Collapsed" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected}"
                               Value="True" />
                    <Condition Binding="{Binding DataContext.IsDefaultMode, RelativeSource={RelativeSource AncestorType=Window}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Status Indicator Ellipse Style -->
    <Style x:Key="StatusIndicatorEllipseStyle"
           TargetType="Ellipse">
        <Setter Property="Fill"
                Value="#6b7280" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsScanning}"
                         Value="True">
                <Setter Property="Fill"
                        Value="#16a34a" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Empty State Description TextBlock Style -->
    <Style x:Key="EmptyStateDescriptionTextBlockStyle"
           TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsDefaultMode}"
                         Value="True">
                <Setter Property="Text"
                        Value="Click Start Scan to discover devices using default settings" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsCustomMode}"
                         Value="True">
                <Setter Property="Text"
                        Value="Select discovery methods and network segments, then click Start Scan" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>